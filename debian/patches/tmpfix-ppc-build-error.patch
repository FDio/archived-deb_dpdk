Description: Fix ppc64le build error between altivec and bool

We really hope there will eventually be a better fix for this, but currently
we have to unbreak building this code so until something better is available
let's use this modification.

Forwarded: yes
Forward-info: http://mails.dpdk.org/archives/dev/2018-August/109926.html
Author: Christian Ehrhardt <christian.ehrhardt@canonical.com>
Last-Update: 2018-08-22
--- a/drivers/net/mlx5/mlx5_nl.c
+++ b/drivers/net/mlx5/mlx5_nl.c
@@ -834,8 +834,8 @@ mlx5_nl_switch_info_cb(struct nlmsghdr *
 		.switch_id = 0,
 	};
 	size_t off = NLMSG_LENGTH(sizeof(struct ifinfomsg));
-	bool port_name_set = false;
-	bool switch_id_set = false;
+	int port_name_set = 0;
+	int switch_id_set = 0;
 
 	if (nh->nlmsg_type != RTM_NEWLINK)
 		goto error;
@@ -854,7 +854,7 @@ mlx5_nl_switch_info_cb(struct nlmsghdr *
 			if (errno ||
 			    (size_t)(end - (char *)payload) != strlen(payload))
 				goto error;
-			port_name_set = true;
+			port_name_set = 1;
 			break;
 		case IFLA_PHYS_SWITCH_ID:
 			info.switch_id = 0;
@@ -862,7 +862,7 @@ mlx5_nl_switch_info_cb(struct nlmsghdr *
 				info.switch_id <<= 8;
 				info.switch_id |= ((uint8_t *)payload)[i];
 			}
-			switch_id_set = true;
+			switch_id_set = 1;
 			break;
 		}
 		off += RTA_ALIGN(ra->rta_len);
--- a/drivers/net/mlx5/mlx5_ethdev.c
+++ b/drivers/net/mlx5/mlx5_ethdev.c
@@ -1335,8 +1335,8 @@ mlx5_sysfs_switch_info(unsigned int ifin
 	char ifname[IF_NAMESIZE];
 	FILE *file;
 	struct mlx5_switch_info data = { .master = 0, };
-	bool port_name_set = false;
-	bool port_switch_id_set = false;
+	int port_name_set = 0;
+	int port_switch_id_set = 0;
 	char c;
 
 	if (!if_indextoname(ifindex, ifname)) {
--- a/drivers/net/mlx5/mlx5_nl_flow.c
+++ b/drivers/net/mlx5/mlx5_nl_flow.c
@@ -385,11 +385,11 @@ mlx5_nl_flow_transpose(void *buf,
 	const struct rte_flow_action *action;
 	unsigned int n;
 	uint32_t act_index_cur;
-	bool in_port_id_set;
-	bool eth_type_set;
-	bool vlan_present;
-	bool vlan_eth_type_set;
-	bool ip_proto_set;
+	int in_port_id_set;
+	int eth_type_set;
+	int vlan_present;
+	int vlan_eth_type_set;
+	int ip_proto_set;
 	struct nlattr *na_flower;
 	struct nlattr *na_flower_act;
 	struct nlattr *na_vlan_id;
@@ -404,11 +404,11 @@ init:
 	action = actions;
 	n = 0;
 	act_index_cur = 0;
-	in_port_id_set = false;
-	eth_type_set = false;
-	vlan_present = false;
-	vlan_eth_type_set = false;
-	ip_proto_set = false;
+	in_port_id_set = 0;
+	eth_type_set = 0;
+	vlan_present = 0;
+	vlan_eth_type_set = 0;
+	ip_proto_set = 0;
 	na_flower = NULL;
 	na_flower_act = NULL;
 	na_vlan_id = NULL;
